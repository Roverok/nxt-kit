---
- name: install dependencies
  hosts: nxts
  tasks:
  - name: install packages on Debian-based
    apt: pkg={{ item }} state=latest    
    with_items:
      - "openjdk-7-jre"
      - "unzip"
    when: ansible_os_family == "Debian"
    sudo: yes
  - name: install packages on RedHat-based
    yum: name={{ item }} state=latest
    with_items:
      - "openjdk-7-jre"
      - "unzip"
    when: ansible_os_family == "RedHat"
    sudo: yes

- name: update nxt
  hosts: nxts
  gather_facts: no
  vars:
    nxt_local_folder: ~/ansible/nxt
    nxt_remote_folder: ~/nxt-kit
    hallmark_date: "2013-12-11"
    hallmark_weight: 100
    kit_ServerHost: "0.0.0.0"
  vars_prompt:
    - name: "secret_phrase"
      prompt: "secret phrase for hallmarking [if empty hallmark is taken from `hallmark_predef` host variable]"
      default: ""
      private: yes
  tasks:
  - name: uncron check script
    cron: name="is nxt running" state=absent
  - name: kill check script
    shell: pkill -f 'check.nxt.sh'
    ignore_errors: yes
  - name: check remote folders
    file: path={{ item }} state=directory owner={{ ansible_ssh_user }} mode=0744
    with_items:
      - "{{ nxt_remote_folder }}"
      - "{{ nxt_remote_folder }}/distrib"
      - "{{ nxt_remote_folder }}/sbin"
  - name: remove cached chain
    file: path="{{ nxt_remote_folder }}/distrib/chain.tar.gz" state=absent
  - name: calculate local md5
    local_action: shell /usr/bin/md5sum {{ nxt_local_folder }}/distrib/{{ item }} | awk '{print $1;}'
    with_items:
      - "chain-original.tar.gz"
      - "nxt.zip"
    changed_when: false
    register: localmd5
  - name: calculate remote md5
    shell: /usr/bin/md5sum {{ nxt_remote_folder }}/distrib/{{ item }} | awk '{print $1;}'
    with_items:
      - "chain-original.tar.gz"
      - "nxt.zip"
    changed_when: false
    register: remotemd5
  - name: copy original chain
    copy: src={{ nxt_local_folder }}/distrib/chain-original.tar.gz dest={{ nxt_remote_folder }}/distrib
    when: localmd5.results[0].stdout != remotemd5.results[0].stdout and localmd5.results[0].stdout != ""
  - name: remote runs different version
    shell: /bin/true
    when: localmd5.results[1].stdout != remotemd5.results[1].stdout
    notify:
    - generate hallmark
    - kill old nxt
    - kill nxt
    - copy lastest distrib
    - unpack new version
    - setup properties
  handlers:
    - name: generate hallmark
      local_action: command wget -qO- "http://127.0.0.1:7876/nxt" --post-data="requestType=markHost&secretPhrase={{ secret_phrase|urlencode }}&host={{ inventory_hostname }}&weight={{ hallmark_weight }}&date={{ hallmark_date }}"
      register: hallmark_result
      when: secret_phrase != ""
    - name: kill old nxt
      shell: pkill -f 'java \-jar start.jar'
      ignore_errors: yes
    - name: kill nxt
      shell: pkill -f 'nxt.jar'
      ignore_errors: yes
    - name: copy lastest distrib
      copy: src={{ nxt_local_folder }}/distrib/nxt.zip dest={{ nxt_remote_folder }}/distrib
    - name: unpack new version
      shell: cd {{ nxt_remote_folder }} && rm -rf nxt && unzip distrib/nxt.zip 
    - name: setup properties
      template: src={{ nxt_local_folder }}/templates/nxt.properties.j2 dest={{ nxt_remote_folder }}/nxt/conf/nxt.properties

- name: ensure check script @ cron
  hosts: nxts
  gather_facts: no
  vars:
    nxt_local_folder: ~/ansible/nxt
    nxt_remote_folder: ~/nxt-kit
  tasks:
  - name: copy check script
    template: src={{ nxt_local_folder }}/scripts-src/check.sh dest={{ nxt_remote_folder }}/sbin/check.nxt.sh mode=0744
  - name: cron check script
    cron: name="is nxt running" job="{{ nxt_remote_folder }}/sbin/check.nxt.sh" minute="*/3"
