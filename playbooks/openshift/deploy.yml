---
- name: break default app on 8080 port
  hosts: openshifts
  gather_facts: no
  tasks: 
  - name: kill it
    shell: pkill ruby
    ignore_errors: yes
  - name: prevent it from starting again
    shell: rm -f "$OPENSHIFT_REPO_DIR/diy/testrubyserver.rb"

- name: update nxt
  hosts: openshifts
  gather_facts: no
  vars:
    nxt_local_folder: ~/ansible/nxt
    nxt_remote_folder: ~/app-root/data/nxt-kit
    nxt_cron_path: ~/app-deployments/current/repo/.openshift/cron/minutely
    kit_peerServerPort: 8080
    kit_enableAPIServer: "false"
    kit_enableUIServer: "false"
  tasks:
  - name: check remote folders
    file: path={{ item }} state=directory mode=0744
    with_items:
      - "{{ nxt_remote_folder }}"
      - "{{ nxt_remote_folder }}/distrib"
      - "{{ nxt_cron_path }}"
  - name: uncron check script
    file: path="{{ nxt_cron_path }}/check.nxt.sh" state=absent
  - name: kill check script
    shell: pkill -f 'check.nxt.sh'
    ignore_errors: yes
  - name: calculate local md5
    local_action: shell /usr/bin/md5sum {{ nxt_local_folder }}/distrib/{{ item }} | awk '{print $1;}'
    with_items:
      - "chain-original.tar.gz"
      - "nxt.zip"
    changed_when: false
    register: localmd5
  - name: calculate remote md5
    shell: /usr/bin/md5sum {{ nxt_remote_folder }}/distrib/{{ item }} | awk '{print $1;}'
    with_items:
      - "chain-original.tar.gz"
      - "nxt.zip"
    changed_when: false
    register: remotemd5
  - name: copy original chain
    copy: src={{ nxt_local_folder }}/distrib/chain-original.tar.gz dest={{ nxt_remote_folder }}/distrib
    when: localmd5.results[0].stdout != remotemd5.results[0].stdout
  - name: remote runs different version
    shell: /bin/true
    when: localmd5.results[1].stdout != remotemd5.results[1].stdout
    notify:
    - kill old nxt
    - kill nxt
    - copy lastest distrib
    - unpack new version
    - set IP
    - setup properties
  handlers:
    # Obsolete and will be removed
    - name: kill old nxt
      shell: pkill -f 'java \-jar start.jar'
      ignore_errors: yes
    - name: kill nxt
      shell: pkill -f 'nxt.jar'
      ignore_errors: yes
    - name: copy lastest distrib
      copy: src={{ nxt_local_folder }}/distrib/nxt.zip dest={{ nxt_remote_folder }}/distrib
    - name: unpack new version
      shell: cd {{ nxt_remote_folder }} && rm -rf nxt && unzip distrib/nxt.zip 
    - name: set IP
      shell: env | grep IP | awk -F"=" '{print $2}'
      register: kit_ServerHost
    - name: setup properties
      template: src={{ nxt_local_folder }}/templates/nxt.properties.j2 dest={{ nxt_remote_folder }}/nxt/conf/nxt.properties

- name: ensure check script @ cron
  hosts: openshifts
  gather_facts: no
  vars:
    nxt_local_folder: ~/ansible/nxt
    nxt_remote_folder: ~/app-root/data/nxt-kit
    nxt_cron_path: ~/app-deployments/current/repo/.openshift/cron/minutely
  tasks:
  - name: cron
    template: src={{ nxt_local_folder }}/scripts-src/check.sh dest={{ nxt_cron_path }}/check.nxt.sh mode=0744
# - name: set check every 3 minutes
#   shell: sed -i '2i if (( $(date "+%M") % 3 )); then exit 0; fi' {{ nxt_cron_path }}/check.nxt.sh
  - name: remove sleep
    shell: sed -i '/sleep/d' {{ nxt_cron_path }}/check.nxt.sh
  - name: run script (Press Ctrl+C after 30 seconds!!!)
    shell: "{{ nxt_cron_path }}/check.nxt.sh"
